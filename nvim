" Use <Space> as <leader>
nnoremap <SPACE> <Nop>
let mapleader=' '

set tabstop=4
set shiftwidth=4
set softtabstop=4
set expandtab
set smartindent
set exrc
set number
set relativenumber
set nohlsearch
set hidden
set noerrorbells
set nowrap
set smartcase
set incsearch
set scrolloff=8
set signcolumn=yes
set colorcolumn=80
set updatetime=300

call plug#begin('~/.vim/plugged')

Plug 'gruvbox-community/gruvbox'
Plug 'vim-airline/vim-airline'
Plug 'fatih/molokai'
Plug 'luochen1990/rainbow'
Plug 'tpope/vim-fugitive'
Plug 'ctrlpvim/ctrlp.vim'
Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim'

call plug#end()

colorscheme molokai
highlight Normal guibg=none ctermbg=none
highlight NonText guifg=bg

let g:rainbow_active=1

let s:comment_map = { 
    \   "c": '\/\/',
    \   "cpp": '\/\/',
    \   "go": '\/\/',
    \   "java": '\/\/',
    \   "javascript": '\/\/',
    \   "lua": '--',
    \   "scala": '\/\/',
    \   "php": '\/\/',
    \   "python": '#',
    \   "ruby": '#',
    \   "rust": '\/\/',
    \   "sh": '#',
    \   "desktop": '#',
    \   "fstab": '#',
    \   "conf": '#',
    \   "profile": '#',
    \   "bashrc": '#',
    \   "bash_profile": '#',
    \   "mail": '>',
    \   "eml": '>',
    \   "bat": 'REM',
    \   "ahk": ';',
    \   "vim": '"',
    \   "tex": '%',
    \ }

function! ToggleComment()
    if has_key(s:comment_map, &filetype)
        let comment_leader = s:comment_map[&filetype]
        if getline('.') =~ "^\\s*" . comment_leader . " " 
            " Uncomment the line
            execute "silent s/^\\(\\s*\\)" . comment_leader . " /\\1/"
        else 
            if getline('.') =~ "^\\s*" . comment_leader
                " Uncomment the line
                execute "silent s/^\\(\\s*\\)" . comment_leader . "/\\1/"
            else
                " Comment the line
                execute "silent s/^\\(\\s*\\)/\\1" . comment_leader . " /"
            end
        end
    else
        echo "No comment leader found for filetype"
    end
endfunction

nnoremap <C-_> :call ToggleComment()<cr>
vnoremap <C-_> :call ToggleComment()<cr>

nnoremap n nzzzv
nnoremap N Nzzzv
nnoremap J mzJ'z

nnoremap Y y$

inoremap , ,<c-g>u
inoremap . .<c-g>u
inoremap ! !<c-g>u
inoremap ? ?<c-g>u
inoremap <CR> <CR><c-g>u

nnoremap <expr> k (v:count > 5 ? "m'" . v:count : "") . 'k'
nnoremap <expr> j (v:count > 5 ? "m'" . v:count : "") . 'j'

vnoremap J :m '>+1<CR>gv=gv
vnoremap K :m '<-2<CR>gv=gv
inoremap <C-j> <esc>:m .+1<CR>==
inoremap <C-k> <esc>:m .-2<CR>==
nnoremap <leader>k :m .-2<CR>==
nnoremap <leader>j :m .+1<CR>==

fu! ColemakBindings()
    " Move keys <hjkl>
    nnoremap n <Left>
    nnoremap e <Down>
    nnoremap i <Up>
    nnoremap o <Right>
    nnoremap N <Left>
    nnoremap E <Down>
    nnoremap I <Up>
    nnoremap O <Right>

    " Move keys <web>
    nnoremap a b
    nnoremap r ge
    nnoremap s w
    nnoremap t e
    nnoremap A B
    nnoremap R gE
    nnoremap S W
    nnoremap T E

    " Move keys $^
    nnoremap O $
    nnoremap $ ^

    " Move keys <tf>
    nnoremap p t

    " Search
    nnoremap P T

    " Undo/Redo
    nnoremap l <C-r>

    " Paste
    nnoremap j p
    nnoremap J P

    " Insert
    nnoremap k o
    nnoremap K O
    nnoremap m i
    nnoremap w w
    nnoremap W W
    nnoremap M I
    nnoremap h a
    nnoremap H A
    nnoremap q s
    nnoremap Q S

    " Search
    nnoremap b n
    nnoremap B N

    " Replace
    nnoremap w r
    nnoremap W R

endfunction

fu! QwertyBindings()
    nnoremap n n
    nnoremap e e
    nnoremap i i
    nnoremap o o
    nnoremap N N
    nnoremap E E
    nnoremap I I
    nnoremap O O
    nnoremap a a
    nnoremap r r
    nnoremap s s
    nnoremap t t
    nnoremap A A
    nnoremap R R
    nnoremap S S
    nnoremap T T
    nnoremap O O
    nnoremap $ $
    nnoremap p p
    nnoremap P p
    nnoremap l l
    nnoremap j j
    nnoremap J J
    nnoremap k k
    nnoremap K K
    nnoremap m m
    nnoremap M M
    nnoremap h h
    nnoremap H H
    nnoremap q q
    nnoremap Q Q
    nnoremap n n
    nnoremap N N
    nnoremap w w
    nnoremap W W
endfunction
